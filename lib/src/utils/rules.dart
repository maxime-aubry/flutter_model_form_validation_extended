import 'package:flutter_model_form_validation_extended/src/utils/enum.dart';

class Rules {
  static Map<ColorType, String> color = {
    ColorType.hex: r'^(#)?' +
        r'(' +
        r'(([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2}))' +
        r'|' +
        r'(([a-fA-F0-9]{1})([a-fA-F0-9]{1})([a-fA-F0-9]{1}))' +
        r')$',
    ColorType.rgb: r'^(rgb|RGB)[\s+]?\(' +
        r'[\s+]?([0-9]|[1-8][0-9]|9[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])[\s+]?,' + // 0-255
        r'[\s+]?([0-9]|[1-8][0-9]|9[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])[\s+]?,' + // 0-255
        r'[\s+]?([0-9]|[1-8][0-9]|9[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])[\s+]?' + // 0-255
        r'\)[\s+]?$',
    ColorType.hsl: r'^(hsl|HSL)[\s+]?\(' +
        r'[\s+]?([0-9]|[1-8][0-9]|9[0-9]|[12][0-9]{2}|3[0-5][0-9]|360)[\s+]?,' + // 0-360
        r'[\s+]?([0-9]|[1-8][0-9]|9[0-9]|100)%[\s+]?,' + // 0-100
        r'[\s+]?([0-9]|[1-8][0-9]|9[0-9]|100)%[\s+]?' + // 0-100
        r'\)[\s+]?$',
    ColorType.hwb: r'^(hwb|HWB)[\s+]?\(' +
        r'[\s+]?([0-9]|[1-8][0-9]|9[0-9]|[12][0-9]{2}|3[0-5][0-9]|360)[\s+]?,' + // 0-360
        r'[\s+]?([0-9]|[1-8][0-9]|9[0-9]|100)%[\s+]?,' + // 0-100%
        r'[\s+]?([0-9]|[1-8][0-9]|9[0-9]|100)%[\s+]?' + // 0-100%
        r'\)[\s+]?$',
    ColorType.cmyk: r'^(cmyk|CMYK)[\s+]?\(' +
        r'[\s+]?([0-9]|[1-8][0-9]|9[0-9]|100)%[\s+]?,' + // 0-100%
        r'[\s+]?([0-9]|[1-8][0-9]|9[0-9]|100)%[\s+]?,' + // 0-100%
        r'[\s+]?([0-9]|[1-8][0-9]|9[0-9]|100)%[\s+]?,' + // 0-100%
        r'[\s+]?([0-9]|[1-8][0-9]|9[0-9]|100)%[\s+]?' + // 0-100%
        r'\)[\s+]?$',
    ColorType.ncol: r'^[\s+]?' +
        r'([rygcbm|RYGCBM]{1})(\d{1,3})[\s+]?,' + // 'R','Y','G','C','B','M' or 'r','y','g','c','b','m'
        r'[\s+]?([0-9]|[1-8][0-9]|9[0-9]|100)%[\s+]?,' + // 0-100%
        r'[\s+]?([0-9]|[1-8][0-9]|9[0-9]|100)%[\s+]?$', // 0-100%
  };

  static Map<GpsFormat, String> latitude = {
    GpsFormat.dd: r'^(' +
        r'(' +
        r'(([-+]?)([0-9]|[1-8][0-9]|90))' + // -90 -> 0
        r'|' +
        r'([0-9]|[1-8][0-9]|90)' + // 0 -> 90
        r')' +
        r'([.]\d{1,7})' + // decimals
        r')$',
    GpsFormat.dm: r'^((S|N)[\s+]?([0-9]|[1-8][0-9]|90)([°]))' + // 0 -> 90
        r'[\s+]?' +
        r'([0-9]|[1-4][0-9]|5[0-9])([.]\d{1,7})' + // 0 -> 59 + decimals
        r'$',
    GpsFormat.dms: r'^((S|N)[\s+]?([0-9]|[1-8][0-9]|90)([°]))' + // 0 -> 90
        r'[\s+]?' +
        r"([0-9]|[1-4][0-9]|5[0-9])(['])" + // 0 -> 59
        r'[\s+]?' +
        r'([0-9]|[1-4][0-9]|5[0-9])([.]\d{1,7}["])' + // 0 -> 59 + decimals
        r'$',
  };

  static Map<GpsFormat, String> longitude = {
    GpsFormat.dd: r'^(' +
        r'(' +
        r'(([-+]?)([0-9]|[1-8][0-9]|9[0-9]|1[0-7][0-9]|180))' + // -180 -> 0
        r'|' +
        r'([0-9]|[1-8][0-9]|9[0-9]|1[0-7][0-9]|180)' + // 0 -> 180
        r')' +
        r'([.]\d{1,7})' + // decimals
        r')$',
    GpsFormat.dm:
        r'^((E|W)[\s+]?([0-9]|[1-8][0-9]|9[0-9]|1[0-7][0-9]|180)([°]))' + // 0 -> 180
            r'[\s+]?' +
            r'([0-9]|[1-4][0-9]|5[0-9])([.]\d{1,7})' + // 0 -> 59 + decimals
            r'$',
    GpsFormat.dms:
        r'^((E|W)[\s+]?([0-9]|[1-8][0-9]|9[0-9]|1[0-7][0-9]|180)([°]))' + // 0 -> 180 + °
            r'[\s+]?' +
            r"([0-9]|[1-4][0-9]|5[0-9])(['])" + // 0 -> 59 + '
            r'[\s+]?' +
            r'([0-9]|[1-4][0-9]|5[0-9])([.]\d{1,7}["])' + // 0 -> 59 + decimals + "
            r'$',
  };
}
