// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import 'dart:core';
import 'models.dart' as prefix1;
import 'package:dart_json_mapper/src/model/annotations.dart' as prefix2;
import 'package:flutter_model_form_validation/src/annotations/flutter_model_form_validator.dart'
    as prefix0;
import 'package:flutter_model_form_validation_extended/src/annotations/validators/color.dart'
    as prefix3;
import 'package:flutter_model_form_validation_extended/src/utils/enum.dart'
    as prefix4;

// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const
// ignore_for_file: implementation_imports

// ignore:unused_import
import 'package:reflectable/mirrors.dart' as m;
// ignore:unused_import
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
// ignore:unused_import
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.FlutterModelFormValidator(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r'ColorTest',
            r'.ColorTest',
            7,
            0,
            const prefix0.FlutterModelFormValidator(),
            const <int>[0, 1],
            const <int>[9, 10, 11, 12, 13, 7, 8],
            const <int>[],
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            const <Object>[prefix0.flutterModelFormValidator],
            null),
        r.NonGenericClassMirrorImpl(
            r'ColorWithUserAndDeveloperValuesTest',
            r'.ColorWithUserAndDeveloperValuesTest',
            7,
            1,
            const prefix0.FlutterModelFormValidator(),
            const <int>[2, 3],
            const <int>[9, 10, 11, 12, 13, 14, 15],
            const <int>[],
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            const <Object>[prefix0.flutterModelFormValidator],
            null),
        r.NonGenericClassMirrorImpl(
            r'ColorWithUserValuesTest',
            r'.ColorWithUserValuesTest',
            7,
            2,
            const prefix0.FlutterModelFormValidator(),
            const <int>[4, 5],
            const <int>[9, 10, 11, 12, 13, 16, 17],
            const <int>[],
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            const <Object>[prefix0.flutterModelFormValidator],
            null),
        r.NonGenericClassMirrorImpl(
            r'ColorWithDeveloperValuesTest',
            r'.ColorWithDeveloperValuesTest',
            7,
            3,
            const prefix0.FlutterModelFormValidator(),
            const <int>[6],
            const <int>[9, 10, 11, 12, 13, 18],
            const <int>[],
            -1,
            {},
            {},
            {},
            -1,
            -1,
            const <int>[-1],
            const <Object>[prefix0.flutterModelFormValidator],
            null)
      ],
      <m.DeclarationMirror>[
        r.VariableMirrorImpl(
            r'value',
            33797,
            0,
            const prefix0.FlutterModelFormValidator(),
            -1,
            -1,
            -1,
            null, const <Object>[
          const prefix3.Color(
              colorTypeOnProperty: 'colorType', error: 'Invalid color')
        ]),
        r.VariableMirrorImpl(
            r'colorType',
            33797,
            0,
            const prefix0.FlutterModelFormValidator(),
            -1,
            -1,
            -1,
            null, const []),
        r.VariableMirrorImpl(
            r'value',
            33797,
            1,
            const prefix0.FlutterModelFormValidator(),
            -1,
            -1,
            -1,
            null, const <Object>[
          const prefix3.Color(
              colorTypeOnProperty: 'colorType',
              colorType: prefix4.ColorType.hex,
              error: 'Invalid color')
        ]),
        r.VariableMirrorImpl(
            r'colorType',
            33797,
            1,
            const prefix0.FlutterModelFormValidator(),
            -1,
            -1,
            -1,
            null, const []),
        r.VariableMirrorImpl(
            r'value',
            33797,
            2,
            const prefix0.FlutterModelFormValidator(),
            -1,
            -1,
            -1,
            null, const <Object>[
          const prefix3.Color(
              colorTypeOnProperty: 'colorType',
              error: 'This String is not in the range')
        ]),
        r.VariableMirrorImpl(
            r'colorType',
            33797,
            2,
            const prefix0.FlutterModelFormValidator(),
            -1,
            -1,
            -1,
            null, const []),
        r.VariableMirrorImpl(
            r'value',
            33797,
            3,
            const prefix0.FlutterModelFormValidator(),
            -1,
            -1,
            -1,
            null, const <Object>[
          const prefix3.Color(
              colorType: prefix4.ColorType.hex,
              error: 'This String is not in the range')
        ]),
        r.ImplicitGetterMirrorImpl(
            const prefix0.FlutterModelFormValidator(), 0, 7),
        r.ImplicitGetterMirrorImpl(
            const prefix0.FlutterModelFormValidator(), 1, 8),
        r.MethodMirrorImpl(
            r'==',
            131074,
            null,
            -1,
            -1,
            -1,
            null,
            const <int>[0],
            const prefix0.FlutterModelFormValidator(),
            const []),
        r.MethodMirrorImpl(r'toString', 131074, null, -1, -1, -1, null,
            const <int>[], const prefix0.FlutterModelFormValidator(), const []),
        r.MethodMirrorImpl(
            r'noSuchMethod',
            65538,
            null,
            null,
            -1,
            -1,
            null,
            const <int>[1],
            const prefix0.FlutterModelFormValidator(),
            const []),
        r.MethodMirrorImpl(r'hashCode', 131075, null, -1, -1, -1, null,
            const <int>[], const prefix0.FlutterModelFormValidator(), const []),
        r.MethodMirrorImpl(r'runtimeType', 131075, null, -1, -1, -1, null,
            const <int>[], const prefix0.FlutterModelFormValidator(), const []),
        r.ImplicitGetterMirrorImpl(
            const prefix0.FlutterModelFormValidator(), 2, 14),
        r.ImplicitGetterMirrorImpl(
            const prefix0.FlutterModelFormValidator(), 3, 15),
        r.ImplicitGetterMirrorImpl(
            const prefix0.FlutterModelFormValidator(), 4, 16),
        r.ImplicitGetterMirrorImpl(
            const prefix0.FlutterModelFormValidator(), 5, 17),
        r.ImplicitGetterMirrorImpl(
            const prefix0.FlutterModelFormValidator(), 6, 18)
      ],
      <m.ParameterMirror>[
        r.ParameterMirrorImpl(
            r'other',
            32774,
            9,
            const prefix0.FlutterModelFormValidator(),
            -1,
            -1,
            -1,
            null,
            const [],
            null,
            null),
        r.ParameterMirrorImpl(
            r'invocation',
            32774,
            11,
            const prefix0.FlutterModelFormValidator(),
            -1,
            -1,
            -1,
            null,
            const [],
            null,
            null)
      ],
      <Type>[
        prefix1.ColorTest,
        prefix1.ColorWithUserAndDeveloperValuesTest,
        prefix1.ColorWithUserValuesTest,
        prefix1.ColorWithDeveloperValuesTest
      ],
      4,
      {
        r'==': (dynamic instance) => (x) => instance == x,
        r'toString': (dynamic instance) => instance.toString,
        r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
        r'hashCode': (dynamic instance) => instance.hashCode,
        r'runtimeType': (dynamic instance) => instance.runtimeType,
        r'value': (dynamic instance) => instance.value,
        r'colorType': (dynamic instance) => instance.colorType
      },
      {},
      null,
      []),
  const prefix2.JsonSerializable(): r.ReflectorData(
      <m.TypeMirror>[],
      <m.DeclarationMirror>[],
      <m.ParameterMirror>[],
      <Type>[],
      0,
      {},
      {},
      null,
      [])
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
